name: Release SDK Library

on:
  workflow_dispatch:
    inputs:
      rust-checkout-ref:
        description: 'The branch, tag or SHA to checkout on the rust sdk.'
        required: true
        default: 'main'
      sdk-version:
        description: 'The new version for the sdk library.'
        required: true

jobs:
  build_native:
    name: Build and generate sdk aar
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.ref }}-${{ github.job }}
      cancel-in-progress: true

    env:
      RUST_SDK_PATH: "./matrix-rust-sdk"

    steps:

      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Checkout matrix rust sdk repo
        uses: actions/checkout@v3
        with:
          repository: "matrix-org/matrix-rust-sdk"
          ref: ${{ github.event.inputs.rust-checkout-ref }}
          path: ${{ env.RUST_SDK_PATH }}

      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' || github.ref == 'main' }}
          cache-on-failure: true
          workspaces: |
            ${{ env.RUST_SDK_PATH }} -> target

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Install android sdk
        uses: malinskiy/action-android/install-sdk@release/0.1.2

      - name: Install android ndk
        uses: nttld/setup-ndk@v1
        id: install-ndk
        with:
          ndk-version: r25c

      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add Rust targets
        run: |
          rustup target add x86_64-linux-android
          rustup target add aarch64-linux-android
          rustup target add armv7-linux-androideabi
          rustup target add i686-linux-android

      - name: Install cargo-ndk
        continue-on-error: true
        run: cargo install cargo-ndk

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install argparse
          pip install requests

      - name: Run release script
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
          GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 ./scripts/release.py --module SDK --version ${{ github.event.inputs.sdk-version }} --ref ${{ github.event.inputs.rust-checkout-ref }} --path-to-sdk $RUST_SDK_PATH --skip-clone
